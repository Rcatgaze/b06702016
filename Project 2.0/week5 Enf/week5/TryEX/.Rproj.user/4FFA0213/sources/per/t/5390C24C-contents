library(shiny)
library(ggplot2)

dta <- read.csv(file = "data/MLB2008 .csv",
                header = TRUE)
dta$Fr[dta$G <= 163 & dta$G >= 120] <- 'high'
dta$Fr[dta$G < 120 & dta$G >= 60] <- 'mid'
dta$Fr[dta$G < 60] <- 'low'
dta$Fr <- as.factor(dta$Fr)

choice.type <-
  c('Fr', 'POS')
choice.value <-
  c(
    'AVG',
    'OBP',
    'SLG'
  )

function(input, output, session) {
    output$SV.plot <- renderPlot({
        if( is.element(input$SV.input, choice.type) ){
            ggplot(data = dta, aes_string(x = input$SV.input)) +
                geom_bar() +
                labs(y = "count", x = input$SV.input)
        }
        else{
            ggplot(data = dta, aes_string(x = input$SV.input)) +
                geom_histogram() +
                labs(y = "count", x = input$SV.input)
        }
    })
    
    output$PA.plot <- renderPlot({
        ggplot(data = dta, aes_string(x = input$PA.type, y = input$PA.value)) +
            geom_boxplot() + coord_flip() +
            labs(y = input$PA.value, x = input$PA.type)
        
    })
    
    output$summary <- renderPrint({
        summary(dta)
    })
    
    output$data.raw <- DT::renderDataTable({
        DT::datatable(dta)
    })
    
    output$data.summary <- DT::renderDataTable({
        DT::datatable(summary(dta))
    })
}